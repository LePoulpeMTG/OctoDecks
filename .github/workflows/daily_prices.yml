name: Export daily prices

on:
  schedule:
    - cron: '0 3 * * *'   # Tous les jours √† 03:00 UTC
  workflow_dispatch:       # Lancement manuel possible

jobs:
  daily:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # --- Install des d√©pendances Firebase ---
    - run: pip install --quiet firebase-admin google-cloud-storage

    # --- T√©l√©charger la base depuis Firebase Storage ---
    - name: Download current DB
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        FIREBASE_BUCKET:          ${{ secrets.FIREBASE_BUCKET }}
      run: |
        python - <<'PY'
        import json, os, firebase_admin
        from firebase_admin import storage as fb_storage, credentials

        if not firebase_admin._apps:
            cred = credentials.Certificate(json.loads(os.environ['FIREBASE_SERVICE_ACCOUNT']))
            firebase_admin.initialize_app(cred, {
                'storageBucket': os.environ['FIREBASE_BUCKET']
            })

        bucket = fb_storage.bucket()
        blob   = bucket.blob("octobase/octobase_reference.db")
        blob.download_to_filename("database/octobase_reference.db")
        print("üì• DB t√©l√©charg√©e")
        PY
    - name: DEBUG show table structure
      run: |
        sqlite3 database/octobase_reference.db \
          "PRAGMA table_info(prices_daily_set);" > dbg.txt
        cat dbg.txt

    # --- Debug des prix journaliers ---    
    - name: DEBUG schema prices_daily_set
      run: |
        sqlite3 database/octobase_reference.db \
          "PRAGMA table_info(prices_daily_set);"


    # --- Calcul des prix journaliers ---
    - name: Build daily price tables
      run: python tools/export_daily_prices.py

    # --- Re-upload de la base mise √† jour ---
    - name: Upload DB back
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        FIREBASE_BUCKET:          ${{ secrets.FIREBASE_BUCKET }}
      run: |
        python - <<'PY'
        import json, os, firebase_admin
        from firebase_admin import storage as fb_storage, credentials

        if not firebase_admin._apps:
            cred = credentials.Certificate(json.loads(os.environ['FIREBASE_SERVICE_ACCOUNT']))
            firebase_admin.initialize_app(cred, {
                'storageBucket': os.environ['FIREBASE_BUCKET']
            })

        bucket = fb_storage.bucket()
        blob   = bucket.blob("octobase/octobase_reference.db")
        blob.upload_from_filename("database/octobase_reference.db",
                                  content_type="application/octet-stream")
        print("‚úÖ Upload daily DB termin√©")
        PY